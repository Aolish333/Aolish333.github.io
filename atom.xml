<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ThinkingSite</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://aolish333.github.io/"/>
  <updated>2019-01-08T03:59:49.044Z</updated>
  <id>http://aolish333.github.io/</id>
  
  <author>
    <name>Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hadoop分布式集群搭建</title>
    <link href="http://aolish333.github.io/2019/01/08/hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>http://aolish333.github.io/2019/01/08/hadoop分布式集群搭建/</id>
    <published>2019-01-08T03:55:55.000Z</published>
    <updated>2019-01-08T03:59:49.044Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>之前完成了hadoop伪分布式集群的安装，处于课设的需要，需要分布式集群。那么接下里就记录一些真分布式有用的东西吧。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;之前完成了hadoop伪分布式集群的安装，处于课设的需要，需要分布式集群。那么接下里就记录一些真分布式有用的东西吧。&lt;/p&gt;
&lt;h2 id=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>分布式平台搭建所遇到的问题</title>
    <link href="http://aolish333.github.io/2019/01/03/%E5%88%86%E5%B8%83%E5%BC%8F%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E6%89%80%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://aolish333.github.io/2019/01/03/分布式平台搭建所遇到的问题/</id>
    <published>2019-01-03T07:41:27.000Z</published>
    <updated>2019-01-03T08:00:23.482Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在搭建分布式平台时，一开始按照网上的教程但是配置centos的网卡但是一直报<code>job for network.service failed because the control process exited with error code</code>的错误，后来修改了好多次虽然网卡配置好了，但还是ping 不到外网。最后在安装centos前验证centos是否完好时，发下真正的错是下面的问题。</p><p><code>Determining IP Information for eth0/3</code> 的问题，查询得知这是，linux网卡驱动与vmware之间的bug,由于自己用vaware12版本。得出的解决方法如下</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li><a href="https://blog.csdn.net/gengkunpeng/article/details/46495631" target="_blank" rel="external">Determining IP Information for eth0</a></li><li>升级vmware版本。注释：我是升级到15版本。</li></ol><h2 id="思考：为啥自己改bug的效率如此的低？"><a href="#思考：为啥自己改bug的效率如此的低？" class="headerlink" title="思考：为啥自己改bug的效率如此的低？"></a>思考：为啥自己改bug的效率如此的低？</h2><ol><li>找不到真正出错的地方。</li><li>学习新东西没有先把原理搞清楚，只是一直在试探。</li><li>太浮躁。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;在搭建分布式平台时，一开始按照网上的教程但是配置centos的网卡但是一直报&lt;code&gt;job for network.se
      
    
    </summary>
    
    
      <category term="bug" scheme="http://aolish333.github.io/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>指针</title>
    <link href="http://aolish333.github.io/2018/07/16/%E6%8C%87%E9%92%88/"/>
    <id>http://aolish333.github.io/2018/07/16/指针/</id>
    <published>2018-07-16T07:46:32.000Z</published>
    <updated>2018-07-16T08:30:40.400Z</updated>
    
    <content type="html"><![CDATA[<p>大一学的C语言，虽然自认为当时学的还不错，这几年也没咋用，有些小细节已经忘了。<br>下面参考已经写的挺不错了，我就总结一下自己要用的东西吧。</p><h1 id="指针的一些疑惑"><a href="#指针的一些疑惑" class="headerlink" title="指针的一些疑惑"></a>指针的一些疑惑</h1><p>int &amp;<em>p； 是不正确的，</em>与p靠得最近，所以p是一个指针，但是这个指针的类型是int &amp;,所以这个是错吴的， 因为不能创建引用的指针。</p><p>int <em>&amp; p, 是正确的， &amp;与p靠得最近，所以p是一个引用，这个引用的类型是int</em>，也就是一个指针变量的引用，但是必须初始化，否则也是错误的。</p><p>#参考博文</p><ol><li><a href="https://liam0205.me/2017/02/05/pointer-in-C-and-Cpp/" target="_blank" rel="external">C 和 C++ 中的指针</a></li><li><a href="https://blog.csdn.net/soonfly/article/details/51131141" target="_blank" rel="external">让你不再害怕指针——C指针详解(经典,非常详细)</a></li><li><a href="https://www.cnblogs.com/alephsoul-alephsoul/archive/2012/10/10/2719192.html" target="_blank" rel="external">[C++基础]019_指针和引用（int<em>、int&amp;、int</em>&amp;、int&amp;<em>、int*</em>）</a></li><li><a href="https://www.zhihu.com/question/39518280" target="_blank" rel="external">请问 C 语言中 &amp; 和 * 的用法？</a></li><li><a href="http://www.360doc.com/content/11/0506/22/6903212_114913736.shtml" target="_blank" rel="external">http://www.360doc.com/content/11/0506/22/6903212_114913736.shtml</a></li><li><a href="https://blog.csdn.net/u013539441/article/details/39859741" target="_blank" rel="external">LinkList <em>L ， LinkList </em>&amp;L 和 LinkList &amp;*L 的区别</a></li><li><a href="https://blog.csdn.net/Tomstrong_369/article/details/54376231" target="_blank" rel="external">C语言指针详解</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大一学的C语言，虽然自认为当时学的还不错，这几年也没咋用，有些小细节已经忘了。&lt;br&gt;下面参考已经写的挺不错了，我就总结一下自己要用的东西吧。&lt;/p&gt;
&lt;h1 id=&quot;指针的一些疑惑&quot;&gt;&lt;a href=&quot;#指针的一些疑惑&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="C语言" scheme="http://aolish333.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="指针" scheme="http://aolish333.github.io/tags/%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1001</title>
    <link href="http://aolish333.github.io/2018/07/14/PAT-A1001/"/>
    <id>http://aolish333.github.io/2018/07/14/PAT-A1001/</id>
    <published>2018-07-14T02:30:37.000Z</published>
    <updated>2018-07-14T02:34:50.087Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1001-A-B-Format-20-（20-point-s-）"><a href="#1001-A-B-Format-20-（20-point-s-）" class="headerlink" title="1001 A+B Format (20)（20 point(s)）"></a>1001 A+B Format (20)（20 point(s)）</h1><p>Calculate a + b and output the sum in standard format – that is, the digits must be separated into groups of three by commas (unless there are less than four digits).</p><p>##Input</p><p>Each input file contains one test case. Each case contains a pair of integers a and b where -1000000 &lt;= a, b &lt;= 1000000. The numbers are separated by a space.</p><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>-1000000 9<br>Sample Output</p><p>-999,991</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><pre><code>#include &lt;cstdio&gt;#include &lt;iostream&gt;using namespace std;/** * 参考网上方法总结： * 1、采用数组进行存储 * 2、采用栈进行存储 * 3、用字符串进行输出 * */int main() {  int a, b;  int result, number[12] = {0};  int len = 0;  while ((cin &gt;&gt; a &gt;&gt; b) &amp;&amp; (a || b)) {    result = a + b;    if (result &lt; 0) {      cout &lt;&lt; &quot;-&quot;;      result = -result;    }    if (result == 0)      number[len++] = 0;    while (result != 0) {      number[len++] = result % 10;      result /= 10;    }    for (int j = len - 1; j &gt;= 0; j--) {      cout &lt;&lt; number[j];      if (j &gt; 0 &amp;&amp; j % 3 == 0) {        cout &lt;&lt; &apos;,&apos;;      }    }  }  system(&quot;pause&quot;);  return 0;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1001-A-B-Format-20-（20-point-s-）&quot;&gt;&lt;a href=&quot;#1001-A-B-Format-20-（20-point-s-）&quot; class=&quot;headerlink&quot; title=&quot;1001 A+B Format (20)（20 poin
      
    
    </summary>
    
    
      <category term="PAT" scheme="http://aolish333.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="http://aolish333.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>.whl is not supported wheel on this platform</title>
    <link href="http://aolish333.github.io/2018/05/11/python/"/>
    <id>http://aolish333.github.io/2018/05/11/python/</id>
    <published>2018-05-11T10:22:37.000Z</published>
    <updated>2018-05-11T10:27:22.064Z</updated>
    
    <content type="html"><![CDATA[<p>安装python的包，出现如标题的的错误，安装了一下午，才发现要与自己所安装包的版本要一致，其次之前报的是下面的错误：<br>    error: Microsoft Visual C++ 14.0 is required.<br>我的解决方案是:下载了VScode 2015。</p><p>自己单独下载了 Microsoft Visual C++ 14.0 没有解决问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装python的包，出现如标题的的错误，安装了一下午，才发现要与自己所安装包的版本要一致，其次之前报的是下面的错误：&lt;br&gt;    error: Microsoft Visual C++ 14.0 is required.&lt;br&gt;我的解决方案是:下载了VScode 201
      
    
    </summary>
    
    
      <category term="python" scheme="http://aolish333.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>美赛模板总结</title>
    <link href="http://aolish333.github.io/2018/01/23/%E7%BE%8E%E8%B5%9B%E6%A8%A1%E6%9D%BF%E6%80%BB%E7%BB%93/"/>
    <id>http://aolish333.github.io/2018/01/23/美赛模板总结/</id>
    <published>2018-01-23T09:41:15.000Z</published>
    <updated>2018-02-07T08:47:47.609Z</updated>
    
    <content type="html"><![CDATA[<p>只介绍使用频率比较高的功能。本文不是基础教程而是总结在数学建模比赛中使用频率较高的一个操作。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>\section 一级标题<br>\subsection 二级标题<br>\subsubsection 三级标题</p><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><pre><code>\begin{enumerate}    \item[1)] A nest item.    \item[2)] A nest item.</code></pre><p>\end{enumerate}</p><h2 id="无须列表"><a href="#无须列表" class="headerlink" title="无须列表"></a>无须列表</h2><pre><code>\begin{itemize}     \item An item.     \begin{itemize}         \item A nested item.         \item[+] A ‘plus’ item.         \item Another item.     \end{itemize}     \item Go back to upper level. \end{itemize}</code></pre><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>分段符号 <code>\par</code></p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><h2 id="交叉引用"><a href="#交叉引用" class="headerlink" title="交叉引用"></a>交叉引用</h2><p>在需要引用的时候,<code>\label{}</code> 和 <code>\ref{}</code> 是成对出现的。前者是标签，后者是引用，大括号内的内容相同。</p><h2 id="文献引用的的上标"><a href="#文献引用的的上标" class="headerlink" title="文献引用的的上标"></a>文献引用的的上标</h2><p>在<code>\begin{document}</code>之前加上</p><pre><code>`\newcommand{\upcite}[1]{\textsuperscript{\textsuperscript{\cite{#1}}}}`。</code></pre><p>显示引用上标的参考文献时用<code>\upcite()</code>。</p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>对于制图可用excel、matlab、R、python、PPT和Latex–TikZ&amp;PGF等软件。但对于复杂的图形，一般采用PPT或者coding类型的软件。</p><h3 id="并排放置两张图"><a href="#并排放置两张图" class="headerlink" title="并排放置两张图"></a>并排放置两张图</h3><p>引入包：<br>\usepackage{caption} % 图片<br>\usepackage{subfigure} % 图片<br>代码:</p><pre><code>\begin{figure}[htbp]    \centering        %居中    \subfigure[name of the subfigure]{      %第一张子图        \begin{minipage}{7cm}            \centering                   %子图居中            \includegraphics[scale=0.4]{one_3.jpg}          %以pic.jpg的0.4倍大小输出        \end{minipage}}    \subfigure[name of the subfigure]{          %第二张子图        \begin{minipage}{7cm}            \centering                                                          %子图居中            \includegraphics[scale=0.4]{one_3.jpg}         %以pic.jpg的0.5倍大小输出        \end{minipage}}    \caption{name of the figure} %          %大图名称    \label{fig:1}      %图片引用标记\end{figure}</code></pre><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><ol><li><a href="https://www.zhihu.com/question/41322252" target="_blank" rel="external">LaTeX 如何让两张图并排显示？</a></li><li><a href="http://blog.sina.com.cn/s/blog_5e16f1770100gdqy.html" target="_blank" rel="external">LaTeX技巧151：subfigure排版并排放置两图</a></li><li><a href="http://zqdevres.qiniucdn.com/data/20141217174706/index.html" target="_blank" rel="external">如何在论文中画出漂亮的插图？</a></li><li><a href="http://www.cnblogs.com/tsingke/p/6649800.html" target="_blank" rel="external">Latex–TikZ和PGF–高级文本绘图，思维绘图，想到–得到！</a></li></ol><h2 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a>插入表格</h2><p>导入的表格一般是三段式。代码如下</p><pre><code>% 引入的宏包%\usepackage{booktabs} % 表格%\usepackage{makecell} % 表格线段的粗细\begin{table}[htbp]\centering\caption{\label{tab:Symbols}Symbols and Definitions}\begin{tabular}{c c}    \Xhline{1.2pt}    Symbol  &amp; Deﬁnition  \\    \midrule    i &amp;  the ith dam in a series of small dams \\    i &amp;  the ith dam in a series of small dams \\    i &amp;  the ith dam in a series of small dams \\    \Xhline{1.2pt}\end{tabular}</code></pre><p>\end{table}</p><p>\begin{table}[htbp] 可以设置图片放放在的位置。</p><p>如：<code>\begin{table}[p]</code> 是将图片单独放在一页。<code>\begin{table}[H]</code> 是在当前位置。</p><p>同样 [t] [b] 分别代表位于页面的顶端或低端。</p><h2 id="表格过长的处理方式"><a href="#表格过长的处理方式" class="headerlink" title="表格过长的处理方式"></a>表格过长的处理方式</h2><p>一般方法有：</p><ul><li>旋转表格；</li><li>缩放表格；</li><li>设置单元格宽度，自动换行。</li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ol><li><a href="http://blog.163.com/heyanqiner@126/blog/static/173423558201152454357190/" target="_blank" rel="external">表格过长的处理方式</a></li><li><a href="http://bbs.ctex.org/forum.php?mod=viewthread&amp;tid=152527" target="_blank" rel="external">表格太大 怎么成倍缩小 适应页面宽度 </a></li></ol><h3 id="导入表格的第三方插件"><a href="#导入表格的第三方插件" class="headerlink" title="导入表格的第三方插件"></a>导入表格的第三方插件</h3><p>写数学建模的论文，有时候需要导入表格，自己新建表格太累。一般是导入表格之后再就行调试。<br><a href="https://ctan.org/tex-archive/support/excel2latex/" target="_blank" rel="external">Excel2LaTeX.xla 下载链接</a><br>下载完后，加入Excel加载项，如下图所示<br><img src="https://i.imgur.com/EBmw4Zg.png" alt=""></p><h2 id="插入公式"><a href="#插入公式" class="headerlink" title="插入公式"></a>插入公式</h2><p>基本公式的使用可以参考你所使用的编译器的导航栏，以便了解公式的基本使用。或者你可以参考下面的参考文献 1。</p><h3 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h3><pre><code>\times 乘号</code></pre><h2 id="插入文献"><a href="#插入文献" class="headerlink" title="插入文献"></a>插入文献</h2><p>引入多个参考文献</p><pre><code>\usepackage[numbers,sort&amp;compress]{natbib} % 引入多个参考文献\cite{bibtex1，bibtex2，bibtex3} % 引入</code></pre><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>引入文件对于latex 来说有许多快捷方式。对于文件的管理可参考文献 2 知乎的回答。</p><ol><li><a href="http://blog.sina.com.cn/s/blog_5e16f1770100fs38.html" target="_blank" rel="external">LaTeX技巧10：LaTeX数学公式输入初级入门</a></li><li><a href="https://www.zhihu.com/question/23565739" target="_blank" rel="external">如何在LaTeX写作中管理参考文献?</a></li><li><a href="http://blog.sina.com.cn/s/blog_5e16f1770100fw68.html" target="_blank" rel="external">LaTeX技巧23:BIBTeX制作参考文献</a></li></ol><h1 id="分文件进行编写"><a href="#分文件进行编写" class="headerlink" title="分文件进行编写"></a>分文件进行编写</h1><p>在书写论文时，为了使编译的文章便于调试往往需要分文件进行书写。</p><p>\input{} 导入到主文件里不分页。<br>\include{} 导入主文件新起一页，只能用在正文里<br>{}里只写文件名不屑后缀。</p><p>在 mcmthesis 中建议附录用\include{},其他用\input{}</p><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="http://blog.csdn.net/yanxiangtianji/article/details/13169699" target="_blank" rel="external">latex分文件编写技巧</a></li></ol><h2 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a>插入代码</h2><h1 id="Tex-studio-常用快捷键"><a href="#Tex-studio-常用快捷键" class="headerlink" title="Tex studio 常用快捷键"></a>Tex studio 常用快捷键</h1><pre><code>crt+T 注释与取消注释crt+E 环境crt+k 删除整行</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;只介绍使用频率比较高的功能。本文不是基础教程而是总结在数学建模比赛中使用频率较高的一个操作。&lt;/p&gt;
&lt;h1 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h1&gt;&lt;h2 id=&quot;标题&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="数学建模" scheme="http://aolish333.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
      <category term="美赛" scheme="http://aolish333.github.io/tags/%E7%BE%8E%E8%B5%9B/"/>
    
      <category term="Latex" scheme="http://aolish333.github.io/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>fork 别人的项目如何提交给原作者？</title>
    <link href="http://aolish333.github.io/2017/12/25/fork%20%E5%88%AB%E4%BA%BA%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%A6%82%E4%BD%95%E6%8F%90%E4%BA%A4%E7%BB%99%E5%8E%9F%E4%BD%9C%E8%80%85%EF%BC%9F/"/>
    <id>http://aolish333.github.io/2017/12/25/fork 别人的项目如何提交给原作者？/</id>
    <published>2017-12-25T03:46:42.000Z</published>
    <updated>2017-12-25T04:22:10.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>已经fork 原作者代码，并进行修改，想提交给原作者。</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>首先打开自己的项目地址，点击<strong>Pull requests</strong>。然后点击<strong>New request</strong>进行提交申请。如下图所示。<br><img src="https://i.imgur.com/2pczkd1.png" alt="New pull request"></p><p>由于我之前已经提交过一次，所以下图没有显示更改的信息。</p><p><img src="https://i.imgur.com/1ikWaR3.png" alt="提交的信息"></p><p>点击<strong>create pull request </strong>进行提交。</p><p><img src="https://i.imgur.com/TZj9EPk.png" alt="填写信息"><br>填写信息后，<strong>create pull request </strong>进行提交。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p> <a href="http://blog.csdn.net/qq1332479771/article/details/56087333" target="_blank" rel="external">github上fork了别人的项目后，再同步更新别人的提交</a></p><p><a href="https://www.cnblogs.com/haore147/p/4218611.html" target="_blank" rel="external">如何在github上fork一个项目来贡献代码以及同步原作者的修改</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前提&quot;&gt;&lt;a href=&quot;#前提&quot; class=&quot;headerlink&quot; title=&quot;前提&quot;&gt;&lt;/a&gt;前提&lt;/h1&gt;&lt;p&gt;已经fork 原作者代码，并进行修改，想提交给原作者。&lt;/p&gt;
&lt;h1 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="git" scheme="http://aolish333.github.io/tags/git/"/>
    
      <category term="github" scheme="http://aolish333.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 学习(一）</title>
    <link href="http://aolish333.github.io/2017/12/01/Spring-Boot-%E5%AD%A6%E4%B9%A0/"/>
    <id>http://aolish333.github.io/2017/12/01/Spring-Boot-学习/</id>
    <published>2017-12-01T12:55:10.000Z</published>
    <updated>2017-12-11T08:08:01.681Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h1><p>Spring Boot 作为未来的框架。之前自己的学习模式一直都是看中文的文档，或者相关的书籍。这次想趁着学习spring尝试一种新的学习模式。主要通过看官网的介绍来尝试的学习去。</p><p>#微服务<br><strong>维基百科的定义：</strong><br>微服务 (Microservices) 是一种软件架构风格，它是以专注于单一责任与功能的小型功能区块 (Small Building Blocks) 为基础，利用模组化的方式组合出复杂的大型应用程序，各功能区块使用与语言无关 (Language-Independent/Language agnostic) 的 API 集相互通讯。微服务架构运用于软件架构风格的其中一项概念是甘露运算 (Dew Computing)，意指由许多的小露水 (代表微服务的功能元件) 汇集而成的运算能力。</p><p>微服务、SOA的对照:<a href="https://www.ibm.com/developerworks/cn/websphere/library/techarticles/1601_clark-trs/1601_clark.html" target="_blank" rel="external">微服务、SOA 和 API：是敌是友？</a>。</p><h1 id="Spring-mevan的官方配置文件"><a href="#Spring-mevan的官方配置文件" class="headerlink" title="Spring mevan的官方配置文件"></a>Spring mevan的官方配置文件</h1><p>Spring Boot与Apache Maven 3.2或更高版本兼容。</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&lt;groupId&gt;com.example&lt;/groupId&gt;&lt;artifactId&gt;myproject&lt;/artifactId&gt;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;!-- Inherit defaults from Spring Boot --&gt;&lt;parent&gt;    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;    &lt;version&gt;1.5.9.RELEASE&lt;/version&gt;&lt;/parent&gt;&lt;!-- Add typical dependencies for a web application --&gt;&lt;dependencies&gt;    &lt;dependency&gt;        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;    &lt;/dependency&gt;&lt;/dependencies&gt;&lt;!-- Package as an executable jar --&gt;&lt;build&gt;    &lt;plugins&gt;        &lt;plugin&gt;            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;    &lt;/plugins&gt;&lt;/build&gt;</code></pre><p>    </p><p>Spring Boot包含一个Maven插件，可以将项目打包为可执行的jar文件。如果你想使用它，请将插件添加到</p><h2 id="兼容java-版本"><a href="#兼容java-版本" class="headerlink" title="兼容java 版本"></a>兼容java 版本</h2><p>spring-boot-starter-parent选择相当保守的Java兼容性。如果您想遵循我们的建议并使用较新的Java版本，则可以添加一个java.version属性：</p><pre><code>&lt;properties&gt;&lt;java.version&gt;1.8&lt;/java.version&gt;&lt;/properties&gt;</code></pre><h2 id="添加-spring-boot-maven-plugin-的原因。"><a href="#添加-spring-boot-maven-plugin-的原因。" class="headerlink" title="添加 spring-boot-maven-plugin 的原因。"></a>添加 spring-boot-maven-plugin 的原因。</h2><p>Java不提供任何标准的方式来加载嵌套的jar文件（即jar文件本身包含在jar中）。如果您正在分发自包含的应用程序，这可能会有问题。</p><p>为了解决这个问题，许多开发者使用嵌套jar包。 嵌套jar包只是将所有jar包里的所有类打包成一个单一的档案。 这种方法的问题在于，很难在应用程序中看到实际使用的库。 如果在多个jar包中使用相同的文件名（但具有不同的内容），则也可能是有问题的。</p><p>Spring Boot采用了不同的方法，可以直接嵌入jar包。<br>要创建一个可执行的jar文件，我们需要将spring-boot-maven-plugin添加到我们的pom.xml。</p><h1 id="HelloWord"><a href="#HelloWord" class="headerlink" title="HelloWord"></a>HelloWord</h1><pre><code>import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.EnableAutoConfiguration;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;/** * @author aolish333@gmail.com * @date 2017/12/1 19:46 * User:Lee */@RestController@EnableAutoConfigurationpublic class HelloCotroller {    @RequestMapping(&quot;/&quot;)    String home() {        return &quot;Hello World!&quot;;    }    public static void main(String[] args) throws Exception {        SpringApplication.run(HelloCotroller.class, args);    }}</code></pre><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/" target="_blank" rel="external">spring 官方文档</a></p><p><a href="http://www.jianshu.com/p/39c1e4ec0d63" target="_blank" rel="external">什么是微服务</a></p><p><a href="https://zh.wikipedia.org/wiki/%E5%BE%AE%E6%9C%8D%E5%8B%99" target="_blank" rel="external">微服务</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;初衷&quot;&gt;&lt;a href=&quot;#初衷&quot; class=&quot;headerlink&quot; title=&quot;初衷&quot;&gt;&lt;/a&gt;初衷&lt;/h1&gt;&lt;p&gt;Spring Boot 作为未来的框架。之前自己的学习模式一直都是看中文的文档，或者相关的书籍。这次想趁着学习spring尝试一种新的学习模
      
    
    </summary>
    
    
      <category term="Spring" scheme="http://aolish333.github.io/tags/Spring/"/>
    
      <category term="Spring Boot" scheme="http://aolish333.github.io/tags/Spring-Boot/"/>
    
      <category term="学习笔记" scheme="http://aolish333.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>SSH整合错误总结</title>
    <link href="http://aolish333.github.io/2017/11/28/SSH%E6%95%B4%E5%90%88%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/"/>
    <id>http://aolish333.github.io/2017/11/28/SSH整合错误总结/</id>
    <published>2017-11-28T03:54:38.000Z</published>
    <updated>2017-11-29T01:39:41.281Z</updated>
    
    <content type="html"><![CDATA[<p>最近整合SSH框架，第一次搞这玩意，有点怂面对BUG有些无能为力，最后还是得硬着头皮看日志。</p><h2 id="java-lang-NoClassDefFoundError-org-hibernate-annotations-common-reflection-ClassLoaderDelegate"><a href="#java-lang-NoClassDefFoundError-org-hibernate-annotations-common-reflection-ClassLoaderDelegate" class="headerlink" title="java.lang.NoClassDefFoundError: org/hibernate/annotations/common/reflection/ClassLoaderDelegate"></a>java.lang.NoClassDefFoundError: org/hibernate/annotations/common/reflection/ClassLoaderDelegate</h2><pre><code>org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;sessionFactory&apos; defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: org/hibernate/annotations/common/reflection/ClassLoaderDelegate</code></pre><p>根据提示到网上找到了结果，但是开始的时候，安装的是5.0.4的包仍然报错。最后改成4.0.4.Final就不报错了。</p><p>下面是添加的依赖：</p><pre><code>&lt;dependency&gt;    &lt;groupId&gt;org.hibernate.common&lt;/groupId&gt;    &lt;artifactId&gt;hibernate-commons-annotations&lt;/artifactId&gt;    &lt;version&gt;4.0.4.Final&lt;/version&gt;&lt;/dependency&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近整合SSH框架，第一次搞这玩意，有点怂面对BUG有些无能为力，最后还是得硬着头皮看日志。&lt;/p&gt;
&lt;h2 id=&quot;java-lang-NoClassDefFoundError-org-hibernate-annotations-common-reflection-Cla
      
    
    </summary>
    
    
      <category term="SSH" scheme="http://aolish333.github.io/tags/SSH/"/>
    
      <category term="Bug集" scheme="http://aolish333.github.io/tags/Bug%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>POJ1094</title>
    <link href="http://aolish333.github.io/2017/11/03/POJ1094/"/>
    <id>http://aolish333.github.io/2017/11/03/POJ1094/</id>
    <published>2017-11-03T08:20:44.000Z</published>
    <updated>2017-11-04T03:23:00.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>题目链接：<a href="http://poj.org/problem?id=1094" target="_blank" rel="external">http://poj.org/problem?id=1094</a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>不同值的上升排序顺序是使用某种形式的小于运算符来排序从最小到最小的元素。 例如，排序的序列A，B，C，D意味着A &lt; B，B &lt; C和C &lt; D.在这个问题中，我们将给你一套 A &lt; B 形式的关系，并要求你确定是否指定了排序顺序。</p><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>输入由多个问题实例组成。 每个实例从包含两个正整数n和m的行开始。 第一个值指示要排序的对象的数量，其中2 &lt; =  n &lt;= 26。要排序的对象将是大写字母表的前n个字符。 第二个值m表示在这个问题实例中给出的形式 A &lt; B 的关系的数量。<br>接下来将是m行，每个包含一个这样的关系由三个字符组成：大写字母，字符“&lt;”和第二个大写字母。 字母不得超出字母表前n个字母的范围。 n = m = 0的值表示输入结束。</p><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>对于每个问题实例，输出由一行组成。可能是以下三种情形之一：</p><ol><li>该字母序列有序，并依次输出;</li><li>排序顺序无法确定;</li><li>输入关系后发现不一致。</li></ol><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><pre><code>4 6A&lt;BA&lt;CB&lt;CC&lt;DB&lt;DA&lt;B3 2A&lt;BB&lt;A26 1A&lt;Z0 0</code></pre><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><pre><code>Sorted sequence determined after 4 relations: ABCD.Inconsistency found after 2 relations.Sorted sequence cannot be determined.</code></pre><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>代码出自参考文献[<a href="http://www.cnblogs.com/yueshuqiao/archive/2011/08/16/2140485.html" target="_blank" rel="external">1</a>]。</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;int map[27][27],indegree[27],q[27];int TopoSort(int n) //拓扑排序{    int c=0,temp[27],loc,m,flag=1,i,j;  ////flag=1:有序 flag=-1:不确定    for(i=1;i&lt;=n;i++)        temp[i]=indegree[i];    for(i=1;i&lt;=n;i++)    {        m=0;        for(j=1;j&lt;=n;j++)            if(temp[j]==0) { m++; loc=j; }  //查找入度为零的顶点个数        if(m==0) return 0;  //有环        if(m&gt;1) flag=-1;  // 无序        q[c++]=loc;   //入度为零的点入队        temp[loc]=-1;        for(j=1;j&lt;=n;j++)            if(map[loc][j]==1) temp[j]--;    }    return flag;}int main(){    int m,n,i,sign;  //当sign=1时，已得出结果    char str[5];    while(scanf(&quot;%d%d&quot;,&amp;n,&amp;m))    {        if(m==0&amp;&amp;n==0) break;        memset(map,0,sizeof(map));        memset(indegree,0,sizeof(indegree));        sign=0;        for(i=1;i&lt;=m;i++)        {            scanf(&quot;%s&quot;,str);            if(sign) continue; //一旦得出结果，对后续的输入不做处理            int x=str[0]-&apos;A&apos;+1;            int y=str[2]-&apos;A&apos;+1;            map[x][y]=1;            indegree[y]++;            int s=TopoSort(n);            if(s==0) //有环            {                printf(&quot;Inconsistency found after %d relations.\n&quot;,i);                sign=1;            }            if(s==1) //有序            {                printf(&quot;Sorted sequence determined after %d relations: &quot;,i);                for(int j=0;j&lt;n;j++)                    printf(&quot;%c&quot;,q[j]+&apos;A&apos;-1);                printf(&quot;.\n&quot;);                sign=1;            }        }        if(!sign) //不确定            printf(&quot;Sorted sequence cannot be determined.\n&quot;);    }    return 0;}</code></pre><h2 id="采用DFS-求有向无环图的拓扑排序-7"><a href="#采用DFS-求有向无环图的拓扑排序-7" class="headerlink" title="采用DFS 求有向无环图的拓扑排序[7]"></a>采用DFS 求有向无环图的拓扑排序[<a href="http://www.cnblogs.com/flipped/p/5530691.html" target="_blank" rel="external">7</a>]</h2><pre><code>#include &lt;cstdio&gt;#include &lt;cstring&gt;#define N 30int n, m, g[N][N], c[N], t, ans;char a, b, topo[N];int dfs(int u){    c[u] = -1;    for(int v = 0; v &lt; n; v++)if(g[u][v])        {            if(c[v] &lt; 0)return 0;            else if(!c[v] &amp;&amp; !dfs(v))return 0;        }    c[u] = 1;    topo[--t] = u;    return 1;}int toposort(){    t = n;    memset(c, 0, sizeof c);    for(int u = 0; u &lt; n; u++)        if(!c[u] &amp;&amp; !dfs(u))return 0;    for(int i = 1; i &lt; n; i++)        if(!g[topo[i - 1]][topo[i]])return -1;    return 1;}int main(){ //  freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);    while(~scanf(&quot;%d%d &quot;, &amp;n, &amp;m) &amp;&amp; n)    {        ans = -1;        memset(g, 0, sizeof g);        for(int i = 1; i &lt;= m; i++)        {            scanf(&quot;%c&lt;%c &quot;, &amp;a, &amp;b);            g[a - &apos;A&apos;][b - &apos;A&apos;] = 1;            if(ans == -1)            {                ans = toposort();                if(!ans)                    printf(&quot;Inconsistency found after %d relations.\n&quot;, i);                else if(ans == 1)                {                    printf(&quot;Sorted sequence determined after %d relations: &quot;, i);                    for(int j = 0; j &lt; n; j++)printf(&quot;%c&quot;, topo[j] + &apos;A&apos;);                    printf(&quot;.\n&quot;);                }            }        }        if(ans == -1)printf(&quot;Sorted sequence cannot be determined.\n&quot;);    }    return 0;}</code></pre><h1 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h1><p>在图论中，由一个有向无环图的顶点组成的序列，当且仅当满足下列条件时，称为该图的一个拓扑排序（英语：Topological sorting）。</p><ol><li>每个顶点出现且只出现一次；</li><li>若A在序列中排在B的前面，则在图中不存在从B到A的路径。</li></ol><p>也可以定义为：拓扑排序是对有向无环图的顶点的一种排序，它使得如果存在一条从顶点A到顶点B的路径，那么在排序中B出现在A的后面。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol><li><a href="http://www.cnblogs.com/yueshuqiao/archive/2011/08/16/2140485.html" target="_blank" rel="external">POJ1094拓扑排序</a></li><li><a href="https://zh.wikipedia.org/wiki/%E6%8B%93%E6%92%B2%E6%8E%92%E5%BA%8F" target="_blank" rel="external">拓扑排序</a></li><li><a href="http://blog.csdn.net/dm_vincent/article/details/7714519" target="_blank" rel="external">拓扑排序的原理及其实现</a></li><li><a href="https://songlee24.github.io/2015/05/07/topological-sorting/" target="_blank" rel="external">拓扑排序（Topological Sorting）</a></li><li><a href="http://www.cnblogs.com/en-heng/p/5085690.html" target="_blank" rel="external">【图论】有向无环图的拓扑排序</a></li><li><a href="http://www.jianshu.com/p/9db01daf978e" target="_blank" rel="external">POJ1094 拓扑排序</a></li><li><a href="http://www.cnblogs.com/flipped/p/5530691.html" target="_blank" rel="external">【POJ 1094】拓扑排序</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;题目链接：&lt;a href=&quot;http://poj.org/problem?id=1094&quot; target=&quot;_blank&quot; rel=&quot;ext
      
    
    </summary>
    
    
      <category term="POJ" scheme="http://aolish333.github.io/tags/POJ/"/>
    
      <category term="拓扑排序" scheme="http://aolish333.github.io/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title> HDU1232(并查集)</title>
    <link href="http://aolish333.github.io/2017/10/24/HDU1232-%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    <id>http://aolish333.github.io/2017/10/24/HDU1232-并查集/</id>
    <published>2017-10-24T08:20:19.000Z</published>
    <updated>2017-10-24T08:24:34.334Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><p>某省调查城镇交通状况，得到现有城镇道路统计表，表中列出了每条道路直接连通的城镇。省政府“畅通工程”的目标是使全省任何两个城镇间都可以实现交通（但不一定有直接的道路相连，只要互相间接通过道路可达即可）。问最少还需要建设多少条道路？ </p><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>测试输入包含若干测试用例。每个测试用例的第1行给出两个正整数，分别是城镇数目N ( &lt; 1000 )和道路数目M；随后的M行对应M条道路，每行给出一对正整数，分别是该条道路直接连通的两个城镇的编号。为简单起见，城镇从1到N编号。<br>注意:两个城市之间可以有多条道路相通,也就是说<br>3 3<br>1 2<br>1 2<br>2 1<br>这种输入也是合法的<br>当N为0时，输入结束，该用例不被处理。</p><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>对每个测试用例，在1行里输出最少还需要建设的道路数目。</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><pre><code>4 21 34 33 31 21 32 35 21 23 5999 00</code></pre><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><pre><code>102998</code></pre><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><pre><code>#include &lt;iostream&gt;#include &lt;cstring&gt;#include &lt;cstdio&gt;#include &lt;cstdlib&gt;//#define M 1050;using namespace std;int arrayNedd[1050];bool t[1050];int find(int x){    int temp = x;    if (arrayNedd[temp]!=temp)    {        temp = arrayNedd[temp];    }    // path compresion    int j = x;    int tmp; //中间变量    while(arrayNedd[j] != temp){        tmp = arrayNedd[j];        arrayNedd[j] = temp;        j = tmp;    }    return temp;}void merge(int x ,int y){    int fx =find(x),fy = find(y);    if ( fy!= fx)    {        arrayNedd[fy] = fx;    }}int main(void){    int a,b,n,m,ans;    while(cin &gt;&gt; n &gt;&gt; m &amp;&amp; n ){        //ininted        for (int i = 1; i &lt;= n; ++i)        {            arrayNedd[i] = i;        }        for (int i = 1; i &lt;= m; ++i)        {            cin &gt;&gt; a &gt;&gt; b;            merge(a,b);        }        memset(t,0,sizeof(t));        for(int i = 1; i &lt;= n; i++){            t[find(i)] = 1;        }        ans = 0;        for (int i = 1; i &lt;= n; ++i)        {            if (t[i]){                ans++;            }        }        printf(&quot;%d\n&quot;,ans-1);    }    return 0;}</code></pre><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="http://blog.csdn.net/blue_skyrim/article/details/50178287" target="_blank" rel="external"> HDU1232——畅通工程（并查集）</a></li><li><a href="http://blog.csdn.net/hy1405430407/article/details/43987427" target="_blank" rel="external"> hdu1232畅通工程，并查集</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;h2 id=&quot;Problem-Description&quot;&gt;&lt;a href=&quot;#Problem-Description&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="HDU" scheme="http://aolish333.github.io/tags/HDU/"/>
    
      <category term="并查集" scheme="http://aolish333.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>LaTex-入门</title>
    <link href="http://aolish333.github.io/2017/10/09/LaTex-%E5%85%A5%E9%97%A8/"/>
    <id>http://aolish333.github.io/2017/10/09/LaTex-入门/</id>
    <published>2017-10-09T07:37:48.000Z</published>
    <updated>2017-10-12T10:35:22.102Z</updated>
    
    <content type="html"><![CDATA[<h1 id="入门感悟"><a href="#入门感悟" class="headerlink" title="入门感悟"></a>入门感悟</h1><p>由于之前有对Latex有过大概的了解，计参加美赛，所以就想将LaTex系统的学习一下。<br>关于入门我觉得<a href="https://github.com/louisstuart96/lshort-new-zh-cn/blob/master/lshort-zh-cn.pdf" target="_blank" rel="external">《一份不太简短的 L ATEX2ε 介绍》</a>比较适合入门。可以与<a href="https://book.douban.com/subject/24703731/" target="_blank" rel="external">《LaTeX入门》</a>结合使用。你还可以参照书籍链接中的配套 TeX 源码进行学习。<br>其实，你只要把《一份不太简短的 L ATEX2ε 介绍》看上一两遍，再结合你要书写的模板从头到尾，排上两三次版配合Google或百度DeBug，基本上就算入门了。</p><p><strong>书籍的下载你可以去<a href="https://www.jiumodiary.com/" target="_blank" rel="external">鵚鸠搜索</a>搜索书名去下载。</strong></p><h2 id="Ctex下载"><a href="#Ctex下载" class="headerlink" title="Ctex下载"></a>Ctex下载</h2><p>你可可以去<a href="https://mirrors.tuna.tsinghua.edu.cn/ctex/legacy/2.9/" target="_blank" rel="external">清华大学开源软件镜像站</a>进行下载，建议新手下载__Full.exe版本,可以避免宏包的安装。</p><h2 id="编译器的选择"><a href="#编译器的选择" class="headerlink" title="编译器的选择"></a>编译器的选择</h2><p>根据一篇LATEX常用编辑器及使用建议，作者@latexstudio@qq.com的分类。</p><h3 id="编译器分为四类："><a href="#编译器分为四类：" class="headerlink" title="编译器分为四类："></a>编译器分为四类：</h3><ul><li><p>第一类，通用类编辑器：不带扩展和带有扩展。</p><ul><li>不带扩展 记事本（notepad），notepad++，EditPlus等 </li><li>带有扩展 SublimeText(LaTeXTools),Vim(LaTeX-Box),Emacs(AUCTeX)等</li></ul></li><li><p>第二类，专用的编辑器，如WinEdt（收费）,TeXworks,TeXmaker,TeXshop等</p></li><li>第三类，可视化编辑器：如LyX,ScientiﬁcWorkplace(SWP),BakomaTEXWord等。 </li><li>第四类，在线编辑器：ShareLaTeX,Overleaf等。</li></ul><h3 id="安装链接"><a href="#安装链接" class="headerlink" title="安装链接"></a>安装链接</h3><ol><li>winedt(ctex自带)</li><li>使用Sublime Text编写LaTeX,参考参考文献3，4进行安装。</li><li><a href="http://texstudio.sourceforge.net/" target="_blank" rel="external">TeXstudio</a></li></ol><h2 id="书籍链接"><a href="#书籍链接" class="headerlink" title="书籍链接"></a>书籍链接</h2><ol><li><p><a href="http://tangzx.qiniudn.com/post-0061-liuhaiyang-example-code.html" target="_blank" rel="external">LaTeX 入门（刘海洋） — 配套 TeX 源码</a></p></li><li><p><a href="https://book.douban.com/subject/1418356/" target="_blank" rel="external">The LaTeX Companion (2nd Edition)</a></p></li></ol><h2 id="论坛"><a href="#论坛" class="headerlink" title="论坛"></a>论坛</h2><ol><li><p><a href="http://www.latexstudio.net/" target="_blank" rel="external">Latex论坛小木屋</a></p></li><li><p><a href="http://bbs.ctex.org/forum.php" target="_blank" rel="external">Ctex社区</a></p></li></ol><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol><li><a href="https://www.zhihu.com/topic#LaTeX" target="_blank" rel="external">知乎Latex话题</a></li><li><a href="https://www.zhihu.com/question/36038602" target="_blank" rel="external">如何配置 Sublime Text 的 LaTeXTools？</a></li><li><a href="http://blog.csdn.net/qazxswed807/article/details/51234834" target="_blank" rel="external">基于TeXlive,使用Sublime Text 3编写LaTeX</a></li><li><a href="https://www.zhihu.com/question/36038602?sort=created" target="_blank" rel="external">如何配置 Sublime Text 的 LaTeXTools？</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;入门感悟&quot;&gt;&lt;a href=&quot;#入门感悟&quot; class=&quot;headerlink&quot; title=&quot;入门感悟&quot;&gt;&lt;/a&gt;入门感悟&lt;/h1&gt;&lt;p&gt;由于之前有对Latex有过大概的了解，计参加美赛，所以就想将LaTex系统的学习一下。&lt;br&gt;关于入门我觉得&lt;a href=
      
    
    </summary>
    
    
      <category term="LaTex" scheme="http://aolish333.github.io/tags/LaTex/"/>
    
  </entry>
  
  <entry>
    <title>Centos上hadoop伪分布式环境搭建</title>
    <link href="http://aolish333.github.io/2017/10/07/Centos%E4%B8%8Ahadoop%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://aolish333.github.io/2017/10/07/Centos上hadoop伪分布式环境搭建/</id>
    <published>2017-10-07T09:25:25.000Z</published>
    <updated>2017-10-08T11:11:28.967Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>虽然不是第一次使用linux,但上次使用命令行也是很早之前了。所以，对于初次在linux上安装开发环境的，建议先去了解一些基础，虽然可以不会哪里查哪里，但是我觉得系统的大概了解一下自己接下来的工作比什么不知道要好很多。就像提前预习功课一样。</p><h2 id="需要准备"><a href="#需要准备" class="headerlink" title="需要准备"></a>需要准备</h2><ol><li>centos 系统</li><li>java jdk</li><li>hadoop</li><li>对vim 进行了解</li><li>了解linux常用命令</li></ol><p>了解Linux命令可以去<a href="http://www.runoob.com/linux/linux-command-manual.html" target="_blank" rel="external">Linux教程</a>先去有个大概的了解。</p><h1 id="安装JAVA-JDK"><a href="#安装JAVA-JDK" class="headerlink" title="安装JAVA JDK"></a>安装JAVA JDK</h1><p>删除自带jdk,参见参考文献。</p><h2 id="可能会用到的命令"><a href="#可能会用到的命令" class="headerlink" title="可能会用到的命令"></a>可能会用到的命令</h2><pre><code>mkdirrmpwd 查看当前路径mv wgetls -lht 查看文件大小tar -xzvf jdk-8u144-linux-x64.tar.gz</code></pre><h2 id="新建java文件"><a href="#新建java文件" class="headerlink" title="新建java文件"></a>新建java文件</h2><pre><code>mkdir java</code></pre><p>进入<br>    cd java</p><h2 id="下载jdk"><a href="#下载jdk" class="headerlink" title="下载jdk"></a>下载jdk</h2><pre><code>wget --no-check-certificate --no-cookies --header &quot;Cookie: oraclelicense=accept-securebackup-cookie&quot; http://download.oracle.com/otn-pub/java/jdk/8u144-b01/090f390dda5b47b9b721c7dfaa008135/jdk-8u144-linux-x64.tar.gz</code></pre><p>解压文件</p><pre><code>tar -zxvf jdk-8u144-linux-x64.tar.gz</code></pre><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>打开/etc/profile文件</p><pre><code>vim /etc/profile</code></pre><p>在文件末尾插入如下内容</p><pre><code>export JAVA_HOME=/java/jdk1.8.0_144export JRE_HOME=${JAVA_HOME}/jre</code></pre><p>export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib<br>export PATH=${JAVA_HOME}/bin:$PATH</p><p>执行profile</p><pre><code>source /etc/profile</code></pre><h2 id="判断是否安装成功"><a href="#判断是否安装成功" class="headerlink" title="判断是否安装成功"></a>判断是否安装成功</h2><pre><code>javac</code></pre><h1 id="安装hadoop"><a href="#安装hadoop" class="headerlink" title="安装hadoop"></a>安装hadoop</h1><p>你可以从<a href="http://hadoop.apache.org/releases.html#04+August,+2017:+Release+2.7.4+available" target="_blank" rel="external">官网去下载hdoop</a>,也可以使用一下链接。</p><h2 id="新建hadoop"><a href="#新建hadoop" class="headerlink" title="新建hadoop"></a>新建hadoop</h2><pre><code>mkdir hadoop</code></pre><h2 id="下载hadoop-2-8-1-tar-gz"><a href="#下载hadoop-2-8-1-tar-gz" class="headerlink" title="下载hadoop-2.8.1.tar.gz"></a>下载hadoop-2.8.1.tar.gz</h2><pre><code>wget --no-check-certificate --no-cookies --header &quot;Cookie: oraclelicense=accept-securebackup-cookie&quot; http://mirrors.hust.edu.cn/apache/hadoop/common/hadoop-2.8.1/hadoop-2.8.1.tar.gz </code></pre><h2 id="解压文件："><a href="#解压文件：" class="headerlink" title="解压文件："></a>解压文件：</h2><pre><code>tar -zxvf hadoop-2.8.1.tar.gz</code></pre><h2 id="删除安装包："><a href="#删除安装包：" class="headerlink" title="删除安装包："></a>删除安装包：</h2><pre><code>rm –rf hadoop-2.8.1.tar.gz</code></pre><h2 id="修改名称"><a href="#修改名称" class="headerlink" title="修改名称"></a>修改名称</h2><pre><code>mv hadoop-2.8.1 hadoop</code></pre><h2 id="创建tmp文件夹"><a href="#创建tmp文件夹" class="headerlink" title="创建tmp文件夹"></a>创建tmp文件夹</h2><pre><code>cd hadoopmkdir temp</code></pre><h2 id="配置环境变量-1"><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><pre><code>export HADOOP_INSTALL=/hadoop/hadoop  export PATH=${HADOOP_INSTALL}/bin:${HADOOP_INSTALL}/sbin${PATH}  export HADOOP_MAPRED_HOME=${HADOOP_INSTALL}  export HADOOP_COMMON_HOME=${HADOOP_INSTALL}  export HADOOP_HDFS_HOME=${HADOOP_INSTALL}  export YARN_HOME=${HADOOP_INSTALLL}  export HADOOP_COMMON_LIB_NATIVE_DIR=${HADOOP_INSTALL}/lib/natvie    export HADOOP_OPTS=&quot;-Djava.library.path=${HADOOP_INSTALL}/lib:${HADOOP_INSTALL}/lib/native&quot; </code></pre><h2 id="创建hadoop用户"><a href="#创建hadoop用户" class="headerlink" title="创建hadoop用户"></a>创建hadoop用户</h2><p>创建hadoop用户的目的是为了在启动hadoop 时不用过多了去输入用户名密码。</p><p>对于不了解Linux用户和用户管理命令，可以访问<a href="http://www.runoob.com/linux/linux-user-manage.html" target="_blank" rel="external">Linux 用户和用户组管理</a>先去熟悉。</p><pre><code>/添加用户：</code></pre><p>进入vim编辑界面，输入i进入插入模式。<br>下拉之下图所示：<br><img src="https://i.imgur.com/qib73X8.png" alt="插入用户"></p><h2 id="设置hadoop-env-sh中的java环境变量"><a href="#设置hadoop-env-sh中的java环境变量" class="headerlink" title="设置hadoop-env.sh中的java环境变量"></a>设置hadoop-env.sh中的java环境变量</h2><pre><code>export JAVA_HOME= {环境变量} </code></pre><p><em>注意：此处的环境变参照hdfs-site.xml中的其他环境变量配置</em></p><h2 id="配置其他文件"><a href="#配置其他文件" class="headerlink" title="配置其他文件"></a>配置其他文件</h2><p>伪分布式需要修改2个配置文件 core-site.xml 和 hdfs-site.xml 。</p><p>配置core-site.xml</p><pre><code>vim ./etc/hadoop/core-site.xml&lt;configuration&gt;    &lt;property&gt;        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;        &lt;value&gt;file:/usr/local/hadoop/tmp&lt;/value&gt;        &lt;description&gt;Abase for other temporary directories.&lt;/description&gt;    &lt;/property&gt;     &lt;property&gt;         &lt;name&gt;fs.defaultFS&lt;/name&gt;         &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;     &lt;/property&gt;&lt;/configuration&gt;</code></pre><p>配置hdfs-site.xml</p><pre><code>&lt;configuration&gt;    &lt;property&gt;        &lt;name&gt;dfs.replication&lt;/name&gt;        &lt;value&gt;1&lt;/value&gt;     &lt;/property&gt;     &lt;property&gt;         &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;         &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/name&lt;/value&gt;      &lt;/property&gt;     &lt;property&gt;        &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;        &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/data&lt;/value&gt;    &lt;/property&gt;&lt;/configuration&gt;</code></pre><h2 id="检测是否安装成功"><a href="#检测是否安装成功" class="headerlink" title="检测是否安装成功"></a>检测是否安装成功</h2><pre><code>./bin/hdfs namenode -format</code></pre><p>如果显示 exiting with status 1 说明配置文件可能存在错误，上面会给提示，对应的去排除错误就好。<br>如果显示 exiting with status 0 则说明安装没有问题，继续执行下一步。</p><p><img src="https://i.imgur.com/xwO62gK.png" alt="配置成功"></p><pre><code>./sbin/start-dfs.sh</code></pre><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="http://www.cnblogs.com/laov/p/3541414.html" target="_blank" rel="external">Linux中常用操作命令    </a></p><p><a href="http://blog.csdn.net/circyo/article/details/46724335" target="_blank" rel="external"> CentOs7安装Hadoop2.7.0总结</a></p><p><a href="http://www.cnblogs.com/sprinng/p/4102565.html" target="_blank" rel="external">删除自带openjdk</a></p><p><a href="http://jingyan.baidu.com/article/4853e1e51d0c101909f72607.html" target="_blank" rel="external">在CentOS上安装Java环境：[1]使用yum安装java</a></p><p><a href="http://www.powerxing.com/install-hadoop-in-centos/" target="_blank" rel="external">Hadoop安装教程_单机/伪分布式配置_CentOS6.4/Hadoop2.6.0</a></p><p><a href="http://www.centoscn.com/hadoop/2015/0118/4525.html" target="_blank" rel="external">CentOS 6.5 配置hadoop 2.6.0伪分布式</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;p&gt;虽然不是第一次使用linux,但上次使用命令行也是很早之前了。所以，对于初次在linux上安装开发环境的，建议先去了解一些基
      
    
    </summary>
    
    
      <category term="java" scheme="http://aolish333.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Git基础操作(一)</title>
    <link href="http://aolish333.github.io/2017/10/05/Git%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C-%E4%B8%80/"/>
    <id>http://aolish333.github.io/2017/10/05/Git基础操作-一/</id>
    <published>2017-10-05T13:02:57.000Z</published>
    <updated>2017-10-08T11:28:52.735Z</updated>
    
    <content type="html"><![CDATA[<p><em>声明：本篇博客是整合各个文章的优秀之处，以便再次查阅翻看。</em></p><h1 id="初识Git"><a href="#初识Git" class="headerlink" title="初识Git"></a>初识Git</h1><h2 id="git的定义"><a href="#git的定义" class="headerlink" title="git的定义"></a>git的定义</h2><p>Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。<br>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<br>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</p><h2 id="git的工作原理"><a href="#git的工作原理" class="headerlink" title="git的工作原理"></a>git的工作原理</h2><p>可以参考<a href="https://git-scm.com/blog" target="_blank" rel="external">官网的博客</a></p><h1 id="git基础操作"><a href="#git基础操作" class="headerlink" title="git基础操作"></a>git基础操作</h1><h2 id="创建一个仓库"><a href="#创建一个仓库" class="headerlink" title="创建一个仓库"></a>创建一个仓库</h2><p>  首先创建一个新的文件夹，进入文件夹。</p><p><img src="https://i.imgur.com/pDVKnHc.png" alt="创建文件夹"></p><pre><code>$ git init</code></pre><p>见下图：</p><p><img src="https://i.imgur.com/MBZxAiI.png" alt="创建仓库的结果"></p><h2 id="检出仓库"><a href="#检出仓库" class="headerlink" title="检出仓库"></a>检出仓库</h2><p>###git add 命令可将该文件添加到缓存<br>    $ git add</p><p>拿test.txt文件做测试，添加test.txt文件。</p><p><img src="https://i.imgur.com/2M9K78Q.png" alt="添加test文件"></p><h3 id="git-add-命令可将该文件添加到缓存"><a href="#git-add-命令可将该文件添加到缓存" class="headerlink" title="git add 命令可将该文件添加到缓存:"></a>git add 命令可将该文件添加到缓存:</h3><pre><code>$ git status </code></pre><p><img src="https://i.imgur.com/8yhpfop.png" alt="git status "></p><h3 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h3><p>首先输入$ git diff , 我们发现命令行并没有什么输出。<br>然后我们进行如下改动：</p><p><img src="https://i.imgur.com/4hq48Qz.png" alt=""></p><p>再次输入$ git diff ，结果如下：</p><p><img src="https://i.imgur.com/cxDIfPg.png" alt="git diff"></p><h3 id="git-commit-进行提交"><a href="#git-commit-进行提交" class="headerlink" title="git commit 进行提交"></a>git commit 进行提交</h3><p>使用 git add 命令将想要快照的内容写入缓存区， 而执行 git commit 将缓存区内容添加到仓库中。</p><h3 id="git-commit-a-跳过git-add提交缓存"><a href="#git-commit-a-跳过git-add提交缓存" class="headerlink" title="git commit -a 跳过git add提交缓存"></a>git commit -a 跳过git add提交缓存</h3><p>为此，我们将它们提交到仓库。<br>当我们修改了很多文件，而不想每一个都add，想commit自动来提交本地修改，我们可以使用-a标识。。命令格式如下：</p><pre><code>git commit -a</code></pre><p>你会进入git bash 编辑界面，关于如何退出请参考下文。<br>如果您不使用-m，会出现编辑器来让你写自己的注释信息。</p><pre><code>git commit -m &quot;Adding files&quot;</code></pre><p><img src="https://i.imgur.com/9G6DjxR.png" alt="提交文件"></p><p>git commit 命令的-a选项可将所有被修改或者已删除的且已经被git管理的文档提交到仓库中。<br><strong>千万注意，-a不会造成新文件被提交，只能修改。</strong></p><h3 id="git-rm-将条目从缓冲区中移出"><a href="#git-rm-将条目从缓冲区中移出" class="headerlink" title="git rm 将条目从缓冲区中移出"></a>git rm 将条目从缓冲区中移出</h3><h3 id="git-mv-移动或重命名一个文件、目录、软连接。"><a href="#git-mv-移动或重命名一个文件、目录、软连接。" class="headerlink" title="git mv 移动或重命名一个文件、目录、软连接。"></a>git mv 移动或重命名一个文件、目录、软连接。</h3><h2 id="发布版本到Github"><a href="#发布版本到Github" class="headerlink" title="发布版本到Github"></a>发布版本到Github</h2><p>刚才才发现github上你创建的仓库已经有教程了，所以看下图就可以。</p><p><img src="https://i.imgur.com/vApZULz.png" alt="创建远程仓库"></p><pre><code>echo &quot;# myFolder&quot; &gt;&gt; README.mdgit initgit add README.mdgit commit -m &quot;first commit&quot;git remote add origin https://github.com/Aolish333/myFolder.gitgit push -u origin master</code></pre><p><img src="https://i.imgur.com/a0OqOwP.png" alt="上传成功"></p><h2 id="关于如何退出git-bush编辑界面"><a href="#关于如何退出git-bush编辑界面" class="headerlink" title="关于如何退出git bush编辑界面"></a>关于如何退出git bush编辑界面</h2><p>按ESC键，以确保您不在编辑模式，然后键入:wq<br><br>:x<br>如果你已经打开了多个文件，你可能需要做一个<br><br>:q!将强制无条件不保存退出</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="external">git简洁版教程 </a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000" target="_blank" rel="external">廖雪峰的网站</a></li><li><a href="http://www.runoob.com/w3cnote/git-five-minutes-tutorial.html" target="_blank" rel="external">Git五分钟教程</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;声明：本篇博客是整合各个文章的优秀之处，以便再次查阅翻看。&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;初识Git&quot;&gt;&lt;a href=&quot;#初识Git&quot; class=&quot;headerlink&quot; title=&quot;初识Git&quot;&gt;&lt;/a&gt;初识Git&lt;/h1&gt;&lt;h2 id=&quot;git的定义&quot;
      
    
    </summary>
    
    
      <category term="git" scheme="http://aolish333.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>MCM/ICM Summary</title>
    <link href="http://aolish333.github.io/2017/09/21/Summary/"/>
    <id>http://aolish333.github.io/2017/09/21/Summary/</id>
    <published>2017-09-21T14:38:51.000Z</published>
    <updated>2017-09-21T14:53:43.359Z</updated>
    
    <content type="html"><![CDATA[<p>这几天回想国赛为啥那么不尽人意。派去他人的原因，自己没有把代码调出来。所以这段时间自己应该再好好总结一下原因。</p><h2 id="清单"><a href="#清单" class="headerlink" title="清单"></a>清单</h2><h3 id="英语："><a href="#英语：" class="headerlink" title="英语："></a>英语：</h3><p>既然参加比赛的目的是提高能力，那么对英语的准备要结合每个人的实际情况自己进行练习。最好是朝着实用英语。</p><h3 id="排版-Latex-："><a href="#排版-Latex-：" class="headerlink" title="排版(Latex)："></a>排版(Latex)：</h3><p>我写几篇关于排版的博客，大家可以补充。总之要达到能达到处理常见Bug。</p><h3 id="算法："><a href="#算法：" class="headerlink" title="算法："></a>算法：</h3><p>我觉得我们应该与自己的兴趣和专业相结合，不强求。可选python、matlab。</p><h3 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h3><p>好的图示可以一眼让别人了解你的思路，我觉得这是我们应该这点</p><h3 id="协同工具"><a href="#协同工具" class="headerlink" title="协同工具"></a>协同工具</h3><p>目前使用github和码云。</p><h3 id="团队配合"><a href="#团队配合" class="headerlink" title="团队配合"></a>团队配合</h3><p>计划至少三个人建模、两个人写作、两个人编程。</p><h2 id="每周任务-待商议"><a href="#每周任务-待商议" class="headerlink" title="每周任务(待商议)"></a>每周任务(待商议)</h2><ol><li>英语：</li><li>算法：我想应该继续刷OJ，毕竟建模只是个比赛。</li></ol><hr><p>先这样吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这几天回想国赛为啥那么不尽人意。派去他人的原因，自己没有把代码调出来。所以这段时间自己应该再好好总结一下原因。&lt;/p&gt;
&lt;h2 id=&quot;清单&quot;&gt;&lt;a href=&quot;#清单&quot; class=&quot;headerlink&quot; title=&quot;清单&quot;&gt;&lt;/a&gt;清单&lt;/h2&gt;&lt;h3 id=&quot;英语
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://aolish333.github.io/2017/09/11/hello-world/"/>
    <id>http://aolish333.github.io/2017/09/11/hello-world/</id>
    <published>2017-09-11T09:41:05.230Z</published>
    <updated>2017-09-11T09:41:05.231Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
